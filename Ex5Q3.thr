THEORY Ex5Q3
IMPORT-THEORY Equality
IMPORT-THEORY Boolean
IMPORT-THEORY Arithmetic
IMPORT-THEORY List
IMPORT-HASKELL List
IMPORT-HASKELL Ex5

THEOREM ex5q3

   bonus xs == 14 + 9*(len xs) + sum xs

STRATEGY Induction xs :: List
  BASE []
    bonus [] == 14 + 9*(len [])+sum []
  
  STRATEGY ReduceBoth
    LHS
      bonus []
      = DEF bonus.1
        14
    RHS 
      14 + 9*(len [])+sum []
      = DEF len.1
        14 + 9 * 0 + sum []
      = DEF sum.1
        14+9*0+0
      = SIMP
        14
  END ReduceBoth
  END BASE

  STEP (x:xs)
    ASSUME
      bonus xs == 14 + 9*(len xs) + sum xs
    
    SHOW
      bonus (x:xs) == 14 + 9*(len (x:xs)) + sum (x:xs)
    
    STRATEGY ReduceBoth
    LHS
      bonus (x:xs)
      = DEF bonus.2
        x + 9 + bonus xs
      = INDHYP l2r @ bonus
        (x+9)+ ((14 + 9* len xs)+sum xs)
    RHS 
      14 + 9*(len (x:xs)) + sum (x:xs)
      = DEF len.2
        14 + 9*(1+ len xs) + sum (x:xs)
      = DEF sum.2
        14 + 9*(1+ len xs) + (x+sum xs)
      = LAW mul_add_left_distr l2r @ *
        14 + (9*1+ 9* (len xs)) + (x+sum xs)
      = SIMP 
        (14 + (9 + 9* len xs)) +(x + sum xs)
      = LAW add_symm l2r 
        (x + sum xs)+(14 + (9 + 9* len xs))
      = LAW add_symm l2r @ + 4
        (x + sum xs)+(14 + (9* len xs+ 9))
      = LAW add_assoc l2r @ + 3
        (x + sum xs)+((14 + 9* len xs) + 9)
      = LAW add_symm l2r @ + 4
        (x + sum xs)+( 9 + (14 + 9* len xs) )
      = LAW add_assoc l2r 
        ((x + sum xs)+9)+(14 + 9* len xs)
      = LAW add_symm l2r @ + 1
        ((sum xs + x)+9)+(14 + 9* len xs)
      = LAW add_assoc r2l @ + 2
        (sum xs + (x+9))+(14 + 9* len xs)
      = LAW add_symm l2r @ + 1
        ((x+9)+ sum xs)+(14 + 9* len xs)
      = LAW add_assoc r2l
        (x+9)+ (sum xs+(14 + 9* len xs))
      = LAW add_symm l2r @ + 3 
        (x+9)+ ((14 + 9* len xs)+sum xs)

    END ReduceBoth

  END STEP

END ReduceBoth

QED ex5q3

